{"ast":null,"code":"var _jsxFileName = \"/Users/raman./Documents/madamfashion/madamfashion/src/components/Pacfile.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { storetoken } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:3001/api/auth/Pacfile\";\nconst Pacfile = () => {\n  _s();\n  const {\n    tokenstoreftn\n  } = useContext(storetoken);\n  const [info, setinfo] = useState(\"\");\n  const [style, setstyle] = useState('red');\n  const navigate = useNavigate();\n  const [logininfo, setlogininfo] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const submitform = async event => {\n    event.preventDefault();\n    const response = await fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(\"\"),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      const values = await response.json();\n      tokenstoreftn(values);\n    } else {\n      setinfo(\"Invalid credentials.\");\n    }\n  };\n  function FindProxyForURL(url, host) {\n    console.log(\"Hello\");\n    // Block Facebook and Amazon\n    if (host === \"facebook.com\" || host === \"www.facebook.com\" || host === \"amazon.com\" || host === \"www.amazon.com\") {\n      return \"PROXY 0.0.0.0:80\"; // Replace with an IP address that doesn't exist\n      // return;\n    }\n\n    // Allow all other connections\n    return \"Direct\";\n  }\n  useEffect(() => {\n    FindProxyForURL(\"www.facebook.com\", \"www.facebbok.com\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Pacfile, \"/HZR7Yo5nG9w57GmpIGqJt4CdhI=\", false, function () {\n  return [useNavigate];\n});\n_c = Pacfile;\nexport default Pacfile;\nvar _c;\n$RefreshReg$(_c, \"Pacfile\");","map":{"version":3,"names":["React","useContext","useEffect","useState","NavLink","useNavigate","toast","storetoken","jsxDEV","_jsxDEV","Fragment","_Fragment","url","Pacfile","_s","tokenstoreftn","info","setinfo","style","setstyle","navigate","logininfo","setlogininfo","email","password","submitform","event","preventDefault","response","fetch","method","body","JSON","stringify","headers","ok","values","json","FindProxyForURL","host","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/raman./Documents/madamfashion/madamfashion/src/components/Pacfile.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useNavigate } from 'react-router-dom'\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { storetoken } from '../App'; const url = \"http://localhost:3001/api/auth/Pacfile\"\n\nconst Pacfile = () => {\n\n  const { tokenstoreftn } = useContext(storetoken)\n\n  const [info, setinfo] = useState(\"\")\n  const [style, setstyle] = useState('red')\n\n  const navigate = useNavigate();\n  const [logininfo, setlogininfo] = useState({\n    email: \"\",\n    password: \"\"\n  })\n\n  const submitform = async (event) => {\n    event.preventDefault()\n\n    const response = await fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(\"\"),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n\n    if (response.ok) {\n      const values = await response.json();\n      tokenstoreftn(values)\n\n\n    }\n    else {\n      setinfo(\"Invalid credentials.\")\n    }\n  }\n  function FindProxyForURL(url, host) {\n    console.log(\"Hello\")\n    // Block Facebook and Amazon\n    if ((host === \"facebook.com\") ||\n        (host === \"www.facebook.com\") ||\n        (host === \"amazon.com\") ||\n        (host === \"www.amazon.com\"))\n         {\n        return \"PROXY 0.0.0.0:80\"; // Replace with an IP address that doesn't exist\n        // return;\n    }\n\n    // Allow all other connections\n    return \"Direct\";\n}\nuseEffect(()=>{FindProxyForURL(\"www.facebook.com\",\"www.facebbok.com\")},[])\n\n  return (\n    <>\n      <h1>hello</h1>\n    </>\n  )\n}\n\nexport default Pacfile\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAC9C,SAASC,UAAU,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAC,MAAMC,GAAG,GAAG,wCAAwC;AAEzF,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,MAAM;IAAEC;EAAc,CAAC,GAAGd,UAAU,CAACM,UAAU,CAAC;EAEhD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMiB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC;IACzCoB,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,UAAU,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACjB,GAAG,EAAE;MAChCkB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,EAAE,CAAC;MACxBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,IAAIN,QAAQ,CAACO,EAAE,EAAE;MACf,MAAMC,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACpCtB,aAAa,CAACqB,MAAM,CAAC;IAGvB,CAAC,MACI;MACHnB,OAAO,CAAC,sBAAsB,CAAC;IACjC;EACF,CAAC;EACD,SAASqB,eAAeA,CAAC1B,GAAG,EAAE2B,IAAI,EAAE;IAClCC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB;IACA,IAAKF,IAAI,KAAK,cAAc,IACvBA,IAAI,KAAK,kBAAmB,IAC5BA,IAAI,KAAK,YAAa,IACtBA,IAAI,KAAK,gBAAiB,EAC1B;MACD,OAAO,kBAAkB,CAAC,CAAC;MAC3B;IACJ;;IAEA;IACA,OAAO,QAAQ;EACnB;EACArC,SAAS,CAAC,MAAI;IAACoC,eAAe,CAAC,kBAAkB,EAAC,kBAAkB,CAAC;EAAA,CAAC,EAAC,EAAE,CAAC;EAExE,oBACE7B,OAAA,CAAAE,SAAA;IAAA+B,QAAA,eACEjC,OAAA;MAAAiC,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC,gBACd,CAAC;AAEP,CAAC;AAAAhC,EAAA,CAxDKD,OAAO;EAAA,QAOMR,WAAW;AAAA;AAAA0C,EAAA,GAPxBlC,OAAO;AA0Db,eAAeA,OAAO;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}