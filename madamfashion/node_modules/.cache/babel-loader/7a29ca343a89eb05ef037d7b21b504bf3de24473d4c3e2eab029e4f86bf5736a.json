{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { storetoken } from '../App';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:3001/api/auth/Pacfile\";\nconst Pacfile = () => {\n  _s();\n  const {\n    tokenstoreftn\n  } = useContext(storetoken);\n  const [info, setinfo] = useState(\"\");\n  const [style, setstyle] = useState('red');\n  const navigate = useNavigate();\n  const [logininfo, setlogininfo] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const submitform = async event => {\n    event.preventDefault();\n    const response = await fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(\"\"),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      const values = await response.json();\n      tokenstoreftn(values);\n      setinfo(\"Login successfully.\");\n      setstyle(\"green\");\n    } else {\n      setinfo(\"Invalid credentials.\");\n    }\n  };\n  const changevalue = event => {\n    let name = event.target.name;\n    let value = event.target.value;\n    setlogininfo({\n      ...logininfo,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: function FindProxyForURL(url, host) {\n      // Block Facebook and Amazon\n      if (host === \"facebook.com\" || host === \"www.facebook.com\" || host === \"amazon.com\" || host === \"www.amazon.com\") {\n        return \"PROXY 0.0.0.0:80\"; // Replace with an IP address that doesn't exist\n      }\n\n      // Allow all other connections\n      return \"DIRECT\";\n    }\n  }, void 0, false);\n};\n_s(Pacfile, \"uGToQixEDZ/uiM4PIrcmSXnoDGY=\", false, function () {\n  return [useNavigate];\n});\n_c = Pacfile;\nexport default Pacfile;\nvar _c;\n$RefreshReg$(_c, \"Pacfile\");","map":{"version":3,"names":["React","useContext","useState","NavLink","useNavigate","toast","storetoken","Fragment","_Fragment","jsxDEV","_jsxDEV","url","Pacfile","_s","tokenstoreftn","info","setinfo","style","setstyle","navigate","logininfo","setlogininfo","email","password","submitform","event","preventDefault","response","fetch","method","body","JSON","stringify","headers","ok","values","json","changevalue","name","target","value","children","FindProxyForURL","host","_c","$RefreshReg$"],"sources":["/Users/raman./Documents/madamfashion/madamfashion/src/components/Pacfile.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useNavigate } from 'react-router-dom'\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { storetoken } from '../App'; const url = \"http://localhost:3001/api/auth/Pacfile\"\n\nconst Pacfile = () => {\n\n  const { tokenstoreftn } = useContext(storetoken)\n\n  const [info, setinfo] = useState(\"\")\n  const [style, setstyle] = useState('red')\n\n  const navigate = useNavigate();\n  const [logininfo, setlogininfo] = useState({\n    email: \"\",\n    password: \"\"\n  })\n\n  const submitform = async (event) => {\n    event.preventDefault()\n\n    const response = await fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(\"\"),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n\n    if (response.ok) {\n      const values = await response.json();\n      tokenstoreftn(values);\n\n      setinfo(\"Login successfully.\")\n      setstyle(\"green\")\n\n\n    }\n    else {\n      setinfo(\"Invalid credentials.\")\n    }\n  }\n\n  const changevalue = (event) => {\n    let name = event.target.name;\n    let value = event.target.value;\n\n    setlogininfo({\n      ...logininfo,\n      [name]: value\n    })\n  }\n\n  return (\n    <>\n      {\n        function FindProxyForURL(url, host) {\n            // Block Facebook and Amazon\n            if ((host === \"facebook.com\") ||\n                (host === \"www.facebook.com\") ||\n                (host === \"amazon.com\") ||\n                (host === \"www.amazon.com\"))\n                 {\n                return \"PROXY 0.0.0.0:80\"; // Replace with an IP address that doesn't exist\n            }\n        \n            // Allow all other connections\n            return \"DIRECT\";\n        }\n        \n      }\n    </>\n  )\n}\n\nexport default Pacfile\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAC9C,SAASC,UAAU,QAAQ,QAAQ;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAC,MAAMC,GAAG,GAAG,wCAAwC;AAEzF,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,MAAM;IAAEC;EAAc,CAAC,GAAGb,UAAU,CAACK,UAAU,CAAC;EAEhD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMiB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC;IACzCoB,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,UAAU,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACjB,GAAG,EAAE;MAChCkB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,EAAE,CAAC;MACxBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,IAAIN,QAAQ,CAACO,EAAE,EAAE;MACf,MAAMC,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACpCtB,aAAa,CAACqB,MAAM,CAAC;MAErBnB,OAAO,CAAC,qBAAqB,CAAC;MAC9BE,QAAQ,CAAC,OAAO,CAAC;IAGnB,CAAC,MACI;MACHF,OAAO,CAAC,sBAAsB,CAAC;IACjC;EACF,CAAC;EAED,MAAMqB,WAAW,GAAIZ,KAAK,IAAK;IAC7B,IAAIa,IAAI,GAAGb,KAAK,CAACc,MAAM,CAACD,IAAI;IAC5B,IAAIE,KAAK,GAAGf,KAAK,CAACc,MAAM,CAACC,KAAK;IAE9BnB,YAAY,CAAC;MACX,GAAGD,SAAS;MACZ,CAACkB,IAAI,GAAGE;IACV,CAAC,CAAC;EACJ,CAAC;EAED,oBACE9B,OAAA,CAAAF,SAAA;IAAAiC,QAAA,EAEI,SAASC,eAAeA,CAAC/B,GAAG,EAAEgC,IAAI,EAAE;MAChC;MACA,IAAKA,IAAI,KAAK,cAAc,IACvBA,IAAI,KAAK,kBAAmB,IAC5BA,IAAI,KAAK,YAAa,IACtBA,IAAI,KAAK,gBAAiB,EAC1B;QACD,OAAO,kBAAkB,CAAC,CAAC;MAC/B;;MAEA;MACA,OAAO,QAAQ;IACnB;EAAC,gBAGH,CAAC;AAEP,CAAC;AAAA9B,EAAA,CApEKD,OAAO;EAAA,QAOMR,WAAW;AAAA;AAAAwC,EAAA,GAPxBhC,OAAO;AAsEb,eAAeA,OAAO;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}